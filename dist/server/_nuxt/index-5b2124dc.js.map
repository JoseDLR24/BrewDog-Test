{"version":3,"file":"index-5b2124dc.js","sources":["../../../../pages/index.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <link rel=\"stylesheet\" href=\"../assets/app.css\">\r\n        <div v-for=\"beer in sortedBeers\" :key=\"beer.id\" class=\"beer-card\">\r\n            <div class=\"beer-image\">\r\n                <img :src=\"beer.image_url\" :alt=\"beer.name\" />\r\n            </div>\r\n            <div class=\"beer-info\">\r\n                <h2>{{ beer.name }}</h2>\r\n                <p>{{ beer.tagline }}</p>\r\n                <p>{{ beer.description }}</p>\r\n                <p>ABV: {{ beer.abv }}</p>\r\n                <p>IBU: {{ beer.ibu }}</p>\r\n                <p class=\"warning\" v-if=\"wordVerification(beer, 'lactose')\">Contains Lactoseâš </p>\r\n                <p class=\"highlight\" v-if=\"wordVerification(beer, 'dry hop')\">Dry Hopped</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            // initialize empty beers array\r\n            beers: []\r\n        };\r\n    },\r\n    // Component is mounted on the DOM\r\n    async mounted() {\r\n        try {\r\n            // http get request using Axios to fetch data from the provided API.\r\n            const response = await axios.get('https://api.punkapi.com/v2/beers?brewed_after=11-2012');\r\n            // Then is stored in the beers array\r\n            this.beers = response.data;\r\n        } catch (error) {\r\n            // show in the console if there is an error\r\n            console.error(error);\r\n        }\r\n    },\r\n    computed: {\r\n        sortedBeers() {\r\n            return this.beers\r\n                // filter the beer by using the ! operator which changes the sense of the expression, now it will return true if the beers do not contain Centennial Hops, in this way we can remove it\r\n                .filter(beer => !this.wordVerification(beer, 'centennial'))\r\n                // create the ascending sorting using the .sort() method\r\n                .sort((a, b) => a.abv - b.abv);\r\n        }\r\n    },\r\n    methods: {\r\n        // function to verify the words in order to avoid repetition. pass and received two parameters, beer parameter and a word that is being defined before depending on the needs\r\n        wordVerification(beer, word){\r\n            // convert all the JSON file into a string so it can check the word needed and returns a boolean value that can be used after.\r\n            return JSON.stringify(beer).toLowerCase().includes(word)\r\n        }\r\n    }\r\n};\r\n</script>"],"names":["_ssrRenderAttrs","_mergeProps","_ssrRenderList","_ssrInterpolate"],"mappings":";;;;;;;;;;;;;;;;;AAuBA,MAAK,YAAU;AAAA,EACX,OAAO;AACH,WAAO;AAAA;AAAA,MAEH,OAAO,CAAC;AAAA;EAEf;AAAA;AAAA,EAED,MAAM,UAAU;AACZ,QAAI;AAEA,YAAM,WAAW,MAAM,MAAM,IAAI,uDAAuD;AAExF,WAAK,QAAQ,SAAS;AAAA,IACxB,SAAO,OAAP;AAEE,cAAQ,MAAM,KAAK;AAAA,IACvB;AAAA,EACH;AAAA,EACD,UAAU;AAAA,IACN,cAAc;AACV,aAAO,KAAK,MAEP,OAAO,UAAQ,CAAC,KAAK,iBAAiB,MAAM,YAAY,CAAC,EAEzD,KAAK,CAAC,GAAG,MAAM,EAAE,MAAM,EAAE,GAAG;AAAA,IACrC;AAAA,EACH;AAAA,EACD,SAAS;AAAA;AAAA,IAEL,iBAAiB,MAAM,MAAK;AAExB,aAAO,KAAK,UAAU,IAAI,EAAE,YAAa,EAAC,SAAS,IAAI;AAAA,IAC3D;AAAA,EACJ;AACJ;;AAzDS,QAAA,OAAAA,eAAAC,WAAA,EAAA,OAAM,eAAW,MAAA,CAAA,4DAAA;AAEEC,gBAAA,SAAA,cAAR,SAAI;8EAEF,OAAK,KAAK,SAAS,kBAAG,OAAK,KAAK,IAAI,sCAGnCC,eAAA,KAAK,IAAI,YACVA,eAAA,KAAK,OAAO,WACZA,eAAA,KAAK,WAAW,gBACXA,eAAA,KAAK,GAAG,gBACRA,eAAA,KAAK,GAAG;AACM,QAAA,SAAA,iBAAiB,MAAI,SAAA,GAAA;;;;;AACnB,QAAA,SAAA,iBAAiB,MAAI,SAAA,GAAA;;;;;;;;;;;;;;;;"}